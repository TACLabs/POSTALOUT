begin Function { }

print "Starting xNVSE let macro unit tests."

	short iTest1
	iTest1 = 1
	assert (iTest1 == 1)
	
	long iTest2
	iTest2 = 2
	assert (iTest2 == 2)

	int iTest3
	iTest3 = 3
	assert (iTest3 == 3)
	

	;== Test mid-script variable declaration + assignement with let macro

	short iTest4 = 4
	assert (iTest4 == 4)
	
	long iTest5 = 5
	assert (iTest5 == 5)

	int iTest6 = 6
	assert (iTest6 == 6)
	
	
	;== Test having an inline expression and using array [] operator
	
	array_var aTest = ar_Init 5 0  ; create array with 5 0s
	aTest[(Rand 1, 2)] = 1  ; should generate 1 every time
	assert (aTest[1] == 1)

	ref rReturnAdd = ({ int iArg0, int iArg1 } => iArg0 + iArg1)
	aTest[(call rReturnAdd 1, 2)] = 1
	assert (aTest[3] == 1)
	
	
print "Finished xNVSE let macro unit tests."


end